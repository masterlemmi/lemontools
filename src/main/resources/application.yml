server:
  port: 8089
#  ssl:
#    key-store: ${KEY_STORE}
#    key-store-type: {$KEY_STORE_TYPE}
#    key-store-password: ${KEY_STORE_PW}
#    key-password: ${KEY_PW}
#    key-alias: ${KEY_ALIAS}
corsPaths: "/**"
clientId: newClient
clientSecret: 259641ab-df6a-4c11-ad97-08dcf87579b6
authServer: http://localhost:8083/auth/realms/baeldung/protocol/openid-connect
resources:
  - name: People Finder
    alias: peoplesvc
    server: ${PEOPLESVC_URL}/api
    healthUrl: ${PEOPLESVC_URL}/api/actuator/health
    route: /people
  - name: Manga Tracker
    alias: mangasvc
    server: ${MANGASVC_URL}/api
    healthUrl: ${MANGASVC_URL}/api/actuator/health
    route: /manga
#logging:
#  level:
#    org:
#      springframework:
#        security: DEBUG
spring:
  datasource:
    url: jdbc:h2:mem:testDb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: lem
    password: lem
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      maxLifetime: 2000000
      connectionTimeout: 30000
      poolName: HikariPoolBooks

  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    hibernate:
      use-new-id-generator-mappings: false
      ddl-auto: create

zuul:
  sslHostnameValidationEnabled: false
  routes:
    api/manga:
      path: /api/manga/**
      sensitiveHeaders: Cookie,Set-Cookie
      url: ${MANGASVC_URL}/api/manga
    api/people:
      path: /api/people/**
      sensitiveHeaders: Cookie,Set-Cookie
      url: ${PEOPLESVC_URL}/api/people

  Servlet30WrapperFilter:
    pre:
      disable:true
